function [error] = read_cal_file%Program to read previous calibration files within CALIBRATIONglobal FIG func_dir NelDatacd([NelData.File_Manager.dirname]);filterspec = '*.m';%if strcmp(computer,'MAC2'), filterspec = '*'; end[file dir] = uigetfile(filterspec,'Calibration Files');cd([dir]);if length(file),    x = eval(strrep(lower(file),'.m',''));    if findstr(getfield(x.General.program_name,'name'),'CAL'),        set(FIG.ax2.ProgMess,'String','Inspecting data file...');        if x.Stimuli.fstlin == 0,            log_txt = 'yes';        elseif x.Stimuli.fstoct == 0,            log_txt = 'no';        end                step_txt = max(x.Stimuli.fstlin, x.Stimuli.fstoct);                if x.Stimuli.ear == 1,            chan_txt = 'left';        else            chan_txt = 'right';        end                if x.Stimuli.is_dBSPL == 1,            spl_txt = 'yes';        else            spl_txt = 'no';        end                set(FIG.ax3.ParamData1,'Color',[.8 .8 .8],'string', {x.Stimuli.frqlo; x.Stimuli.frqhi; log_txt; step_txt; x.Stimuli.bplo; x.Stimuli.bphi; x.Stimuli.n60lo; x.Stimuli.n60hi});set(FIG.ax3.ParamData2,'Color',[.8 .8 .8],'string', {x.Stimuli.n120lo; x.Stimuli.n120hi; chan_txt; x.Stimuli.BaseAtten; x.Stimuli.SlopeAtten; x.Stimuli.BeginSlope; spl_txt; x.Hardware.mic});        set(FIG.ax1.axes,'XLim',[x.Stimuli.frqlo x.Stimuli.frqhi]);        set(FIG.ax1.axes,'XTick',[x.Stimuli.frqlo x.Stimuli.frqhi]);        low_lim = floor(min(x.CalibData(:,2))/21)*20;        up_lim  = ceil( max(x.CalibData(:,2))/19)*20;        set(FIG.ax1.axes,'YLim',[low_lim up_lim]);        set(FIG.ax1.line1,'XData',x.CalibData(:,1),'YData',x.CalibData(:,2));        drawnow;    else        set(FIG.ax1.line1,'XData',0,'YData',0);        set(FIG.ax2.ProgMess,'String','Not a calibration file!');    endendcd([func_dir]);